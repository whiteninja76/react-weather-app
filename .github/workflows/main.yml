name: Scan manifest build and release
on:
  push:
    tags:
      - "*" # build on all tags
  workflow_dispatch:
  
env:
  RELEASE_NAME: platform-status.zip

jobs:
  release:
    runs-on: ubuntu-latest   
    steps:   
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Create release folder
        run: |
          mkdir -p release && ls && rsync -r . --exclude=release --exclude=node_modules --exclude=cdktf.out  --exclude=manifest.json release && ls release
      - name: Create release zip
        run: |
          zip -r $RELEASE_NAME manifest.json release/*  ".github"
      - name: Create a release and upload built artefacts
        uses: actions/github-script@v6
        with:
          script: |
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ github.ref_name }}-${{github.run_number}}",
              generate_release_notes: true,
            });
            
            const releaseFile = "platform-status.zip";
            
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: "platform-status.zip",
              data: `@${releaseFile}`,
            });
          debug: true
          result-encoding: "json"
